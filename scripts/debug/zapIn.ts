import { ethers } from "hardhat";
import * as deployment from "../../deployments/base/ZapKyber.json";

const erc20ABI = [
  "function approve(address spender, uint256 amount) external returns (bool)",
];

async function main() {
  const privateKey = process.env.PK_LP;
  const alchemyId = process.env.ALCHEMY_ID;
  if (!privateKey) {
    throw new Error("Private key is not defined");
  }
  if (!alchemyId) {
    throw new Error("Alchemy Id is not defined");
  }

  const provider = new ethers.providers.JsonRpcProvider(
    `https://base-mainnet.g.alchemy.com/v2/${alchemyId}`
  );

  const wallet = new ethers.Wallet(privateKey, provider);

  const contractAddress = "0xF85CEFeeDa9A24Ec54A644028997Df1d04CBeFdF";
  const contractABI = deployment.abi;

  const contract = new ethers.Contract(contractAddress, contractABI, wallet);

  const amountToApprove = ethers.utils.parseUnits("1000000", 6);

  const tokenAddress = "0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913";
  const tokenContract = new ethers.Contract(tokenAddress, erc20ABI, wallet);

  console.log("Aprobando el token...");
  const approveTx = await tokenContract.approve(
    contractAddress,
    amountToApprove
  );
  await approveTx.wait();
  console.log("Token aprobado con Ã©xito");

  console.log("Calling zapIn...");
  const tx = await contract.zapIn(
    "0x3Fd7957D9F98D46c755685B67dFD8505468A7Cb6",
    "0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913",
    "1000000",
    "10",
    "0xe21fd0e9000000000000000000000000000000000000000000000000000000000000002000000000000000000000000011ddd59c33c73c44733b4123a86ea5ce57f6e854000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000018000000000000000000000000000000000000000000000000000000000000003c000000000000000000000000000000000000000000000000000000000000000c0010100000029020000006f71796114b9cdaef29a801bc5cdbcb561990eeb00000000000000000000000000061a80010a833589fcd6edb6e08f4c7c32d4f71b54bda029136b9bb36519538e0c073894e964e90172e1c0b41f38019bc40f504be4546f24083ccaf0c8553c408a000000000000000000000000670962ed0000004000000000000000000000000000000000000000000000000000000000000000000000000000000000001337538909e810000000000000012536f665cb69408291000000000000000000000000833589fcd6edb6e08f4c7c32d4f71b54bda029130000000000000000000000006b9bb36519538e0c073894e964e90172e1c0b41f000000000000000000000000000000000000000000000000000000000000016000000000000000000000000000000000000000000000000000000000000001a000000000000000000000000000000000000000000000000000000000000001e0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000038019bc40f504be4546f24083ccaf0c8553c408a0000000000000000000000000000000000000000000000000000000000061a80000000000000000000000000000000000000000000000122485536b256478b8000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000220000000000000000000000000000000000000000000000000000000000000000100000000000000000000000011ddd59c33c73c44733b4123a86ea5ce57f6e85400000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000061a80000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022c7b22536f75726365223a22222c22416d6f756e74496e555344223a22302e343030313438373239303636393138222c22416d6f756e744f7574555344223a22302e34313737393130313836313639323033222c22526566657272616c223a22222c22466c616773223a302c22416d6f756e744f7574223a2235343038383536343738343433353336313535323831222c2254696d657374616d70223a313732383636373139372c22496e74656772697479496e666f223a7b224b65794944223a2231222c225369676e6174757265223a2244445057663378576b4d74704657464561613246317976712b726a4b43366931713476774639694e5362543174515179796b46764b746e68437050432f34694b724d41644178694c2b434137516e6969485059326841455670737636584577686d5a7741684c3959524650504a5548636f494e2b414f426436352f5948676e386d504d634e6153535a556434684c35426c6d464650366b587169567154575a376444695a756a526e73704c4e454143313539614f503549584257454f4230773261612f4c666d5a7550765236566f4d6a6d5a5672563738682f75716371516655674f53643235386a54345278416f614e424a61502f2f69315144417a65324d36485553444d6437356a746969642b736f77687a73523939774b757657776a79686e6d65746f34516e4a4f376655744c456675715063364f4c413368304b53754c7268647248672b544a432b79544c54556a65373473673d3d227d7d0000000000000000000000000000000000000000",
    "0xe21fd0e9000000000000000000000000000000000000000000000000000000000000002000000000000000000000000011ddd59c33c73c44733b4123a86ea5ce57f6e854000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000018000000000000000000000000000000000000000000000000000000000000003c000000000000000000000000000000000000000000000000000000000000000c0010100000029020000006f71796114b9cdaef29a801bc5cdbcb561990eeb00000000000000000000000000061a80010a833589fcd6edb6e08f4c7c32d4f71b54bda029136b9bb36519538e0c073894e964e90172e1c0b41f38019bc40f504be4546f24083ccaf0c8553c408a000000000000000000000000670962ed0000004000000000000000000000000000000000000000000000000000000000000000000000000000000000001337538909e810000000000000012536f665cb69408291000000000000000000000000833589fcd6edb6e08f4c7c32d4f71b54bda029130000000000000000000000006b9bb36519538e0c073894e964e90172e1c0b41f000000000000000000000000000000000000000000000000000000000000016000000000000000000000000000000000000000000000000000000000000001a000000000000000000000000000000000000000000000000000000000000001e0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000038019bc40f504be4546f24083ccaf0c8553c408a0000000000000000000000000000000000000000000000000000000000061a80000000000000000000000000000000000000000000000122485536b256478b8000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000220000000000000000000000000000000000000000000000000000000000000000100000000000000000000000011ddd59c33c73c44733b4123a86ea5ce57f6e85400000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000061a80000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022c7b22536f75726365223a22222c22416d6f756e74496e555344223a22302e343030313438373239303636393138222c22416d6f756e744f7574555344223a22302e34313737393130313836313639323033222c22526566657272616c223a22222c22466c616773223a302c22416d6f756e744f7574223a2235343038383536343738343433353336313535323831222c2254696d657374616d70223a313732383636373139372c22496e74656772697479496e666f223a7b224b65794944223a2231222c225369676e6174757265223a2244445057663378576b4d74704657464561613246317976712b726a4b43366931713476774639694e5362543174515179796b46764b746e68437050432f34694b724d41644178694c2b434137516e6969485059326841455670737636584577686d5a7741684c3959524650504a5548636f494e2b414f426436352f5948676e386d504d634e6153535a556434684c35426c6d464650366b587169567154575a376444695a756a526e73704c4e454143313539614f503549584257454f4230773261612f4c666d5a7550765236566f4d6a6d5a5672563738682f75716371516655674f53643235386a54345278416f614e424a61502f2f69315144417a65324d36485553444d6437356a746969642b736f77687a73523939774b757657776a79686e6d65746f34516e4a4f376655744c456675715063364f4c413368304b53754c7268647248672b544a432b79544c54556a65373473673d3d227d7d0000000000000000000000000000000000000000"
  );

  console.log("Broadcasted...");
  await tx.wait();

  console.log("Tx hash:", tx.hash);
}

// Manejar errores
main().catch((error) => {
  console.error(error);
  process.exitCode = 1;
});
